const experiences=[{id:"canal",title:"CANAL+",date:"July 2017 - Present",description:"Frontend engineer working on customer care & sales applications / Sales app for CANAL+ distributors / TVI sales app. <br /> This is a summary of the stack we are using on these projects :",technologies:[{id:"react",name:"<h2>React</h2>: using react & react-router-dom only, as our approach is to make apps that are the less possible framework dependant, in order to facilite future potential migrations."},{id:"sass",name:"<h2>Sass</h2>"},{id:"webpack",name:"<h2>Webpack</h2>: used for dev server, and building of app"},{id:"gulp",name:"<h2>Gulp</h2>: used to orchestrate our tasks (launch local server, e2e, unit tests etc..)"},{id:"jest",name:"<h2>Jest</h2>: unit testing of all our components and services"},{id:"cypress",name:"<h2>Cypress</h2>: e2e testing off all apps pages, to avoid any css regressions on our pages"}]},{id:"poliris",title:"SeLoger",date:"September 2013 - June 2017",description:"Frontend engineer working on the development of P\xe9ricl\xe8s Nomade & Avis de valeur, real estate agencies apps ",technologies:[{id:"angularjs",name:"<h2>AngularJS</h2>"},{id:"sass",name:"<h2>Sass</h2>"}]}];function setContent(e){let t=document.getElementById("experiences"),n=t.querySelector("div");t.querySelectorAll("li").forEach(t=>{t.classList.remove("active"),t.id===e.target.id&&(t.classList.add("active"),n.replaceWith(getContent(e.target.id)))})}function getContent(e){let t=experiences.find(t=>t.id===e),n=document.createElement("div"),s=document.createElement("h1"),a=document.createElement("p"),i=document.createElement("ul");return t.technologies.forEach(e=>{let t=document.createElement("li");t.innerHTML=e.name,i.append(t)}),a.innerHTML=t.description,s.innerHTML=t.date,n.append(s,a,i),n}function init(){let e=document.getElementById("experiences"),t=document.createElement("ul");e.append(t),experiences.forEach((t,n)=>{e.children[0].appendChild(function e(t,n){let s=document.createElement("li");return s.innerHTML=t.title,s.id=t.id,0===n&&s.classList.add("active"),s.addEventListener("click",setContent),s}(t,n))}),e.append(getContent(t.children[0].id))}function toggleStickyNav(){let e=header.children[0];header.classList.toggle("active"),e.classList.toggle("sticky-nav"),document.body.classList.toggle("no-overflow")[0]}const toggleMenuEl=document.querySelector("header > button"),header=document.querySelector("header");toggleMenuEl.addEventListener("click",toggleStickyNav),document.querySelectorAll("header > nav > ul > li").forEach(e=>{e.addEventListener("click",e=>{header.children[0].classList.contains("sticky-nav")&&toggleStickyNav()})});const opts={rootMargin:"-30px"},cb=e=>{let t=document.getElementsByTagName("header")[0];e[0].isIntersecting?t.classList.remove("scrolled"):t.classList.add("scrolled")},observer=new IntersectionObserver(cb,opts),target=document.getElementsByTagName("section")[0];observer.observe(target),init();
